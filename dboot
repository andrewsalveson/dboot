#!/bin/bash
VERSION="0.2"

# temporarily move into dboot folder
OLDWD=$(pwd)
cd ~/dboot


# text colors
RED="\033[91m"
GRN="\033[92m"
NRM="\033[0m"
echo "
              __
        _____/\\_\\     
 BLOK  /\\   / / /  HED
    __/_ \\  \\/_/ \\__     
   /\\___\\ \\_______\\_\\    
   \\/___/ / x   x /_/    
      \\  /  ___  /     
 BOOT  \\/_______/  BOT
       \\/_/       v$VERSION

   DONT B A BLOK HED

"
# build temp and log (replay) script
TMP=~/dboot/tmp
mkdir -p $TMP
LOG=$TMP/log.sh
if [ -f $LOG ]; then
  rm $LOG
fi
echo "#!/bin/bash" >> $LOG
chmod +x $LOG
VERBOSE=false

# parse flags
while getopts ":v" opt; do
  case ${opt} in
    v ) VERBOSE=true
      ;;
    \? ) echo "Usage: ./dboot [-v]"
      exit 1
      ;;
  esac
done

function log {
  LINE="#$1"
  if [ "$VERBOSE" = true ]; then
    echo -e $LINE
  fi
  echo $LINE >> $LOG
}

function pass {
  log "${GRN}$1${NRM}"
}

function fail {
  log "${RED}$1${NRM}"
}

function com {
  log "executing command"
  echo "$1" >> $LOG
  echo "$1"
  $1
}

log "OS: $OSTYPE"
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  source ./dboot-unix-derivative
  source ./dboot-linux-gnu
elif [[ "$OSTYPE" == "linux-gnueabihf" ]]; then
  log "probably a Raspberry Pi"
  source ./dboot-unix-derivative
  source ./dboot-linux-gnueabihf
elif [[ "$OSTYPE" == "darwin"* ]]; then
  source ./dboot-unix-derivative
  source ./dboot-macos
elif [[ "$OSTYPE" == "msys" ]]; then
  source ./dboot-msys
elif [[ "$OSTYPE" == "cygwin" ]]; then
  fail "no scripts for cygwin"
elif [[ "$OSTYPE" == "msys" ]]; then
  fail "no scripts for msys"
elif [[ "$OSTYPE" == "freebsd"* ]]; then
  fail "no scripts for freebsd"
else
  fail "unknown OS"
fi

log "check repo status"
./git-check

source ./install

pass "dboot complete"

# return to original working directory
cd $OLDWD

