#!/bin/bash
VERSION="0.3"

tput init

# temporarily move into dboot folder
OLDWD=$(pwd)
cd ~/dboot
. ./console

LOGO=./BLOKHEAD
BUILD=./WIDJIT
BUILD_WIDTH=14

# print logo
LOGO_LINES=$(cat $LOGO | wc -l | xargs)

while IFS= read -r LINE
do
	echo "$LINE"
	sleep 0.005
done <"$LOGO"

COUNT=1
COLUMNS=$(tput cols)
while IFS= read -r LINE
do
	tput cup $COUNT `expr \( $COLUMNS -  \( $BUILD_WIDTH + 4 \) \)`
	echo "$LINE"
	sleep 0.005
	COUNT=$((COUNT+1))
done <"$BUILD"


TOLAST=`expr \( $LOGO_LINES + 2 \)`
echo -e "$(tput cup 8 19)v${CYA}$VERSION${NRM}$(tput cup 4 4)"


tput cup $TOLAST



TMP=~/dboot/tmp
mkdir -p $TMP
LOG=$TMP/log.sh

# build temp and log (replay) script
if [ -f $LOG ]; then
  rm $LOG
fi
echo "#!/bin/bash" >> $LOG
chmod +x $LOG

info "OS: $OSTYPE"
set +a
if [[ "$OSTYPE" == "linux-gnu" ]]; then
  source ./dboot-unix-derivative
  source ./dboot-linux-gnu
elif [[ "$OSTYPE" == "linux-gnueabihf" ]]; then
  info "probably a Raspberry Pi"
  source ./dboot-unix-derivative
  source ./dboot-linux-gnueabihf
elif [[ "$OSTYPE" == "darwin"* ]]; then
  source ./dboot-unix-derivative
  source ./dboot-macos
elif [[ "$OSTYPE" == "msys" ]]; then
  source ./dboot-msys
elif [[ "$OSTYPE" == "cygwin" ]]; then
  fail "no scripts for cygwin"
elif [[ "$OSTYPE" == "freebsd"* ]]; then
  fail "no scripts for freebsd"
else
  fail "unknown OS"
fi

log "check repo status"
./git-check

source ./install
set -a

pass "dboot complete"

# return to original working directory
cd $OLDWD

